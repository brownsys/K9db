load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@rules_java//java:defs.bzl", "java_binary")
load("format-java.bzl", "format_java")

# Bazel buildifier: auto formats bazel files.
buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./third_party/**",
        "./experiments/GDPRbench",
    ],
    lint_mode = "fix",
)

# Turn the maven repository to an executable jar.
java_binary(
    name = "google_java_format_binary",
    main_class = "com.google.googlejavaformat.java.Main",
    runtime_deps = [
        "@maven//:com_google_googlejavaformat_google_java_format",
    ],
)

format_java(
    name = "format_java",
    tool = ":google_java_format_binary",
)

# Alias: k9db mysql proxy.
alias(
    name = "k9db",
    actual = "//k9db/proxy",
    visibility = ["//visibility:public"],
)

# Flags for drill down experiment.
# Example: bazel [run|build] //:k9db --//:views=off --//:physical_separation=on
string_flag(
    name = "views",
    build_setting_default = "on",
    values = [
        "on",
        "off",
    ],
)

string_flag(
    name = "physical_separation",
    build_setting_default = "off",
    values = [
        "on",
        "off",
    ],
)

config_setting(
    name = "disable_views",
    flag_values = {
        ":views": "off",
    },
    visibility = ["//:__subpackages__"],
)

config_setting(
    name = "enable_separation",
    flag_values = {
        ":physical_separation": "on",
    },
    visibility = ["//:__subpackages__"],
)
