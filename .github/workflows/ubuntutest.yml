name: "Tests on Ubuntu"
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build docker container
      run: |
        docker build -t pelton/latest .

    - name: Run docker container
      run: |
        docker run --mount type=bind,source=$(pwd),target=/home/pelton --name pelton-testing -d -t pelton/latest
        sleep 30

    - name: Test dataflow with valgrind
      env:
        TEST: bazel test //pelton/dataflow/... --config=valgrind --test_output=all
      run: docker exec pelton-testing sh -c "cd /home/pelton && $TEST"

    - name: Build all
      env:
        TEST: bazel build ...
      run: docker exec pelton-testing sh -c "cd /home/pelton && $TEST"

    - name: Test all
      env:
        TEST: bazel test ... --test_output=all --test_arg=--db_username=root --test_arg=--db_password=password
      run: docker exec pelton-testing sh -c "cd /home/pelton && $TEST"

    - name: Run end-2-end sample
      env:
        TEST: bazel run bin:example -- --logtostderr=1
      run: docker exec pelton-testing sh -c "cd /home/pelton && $TEST"

    - name: Run mysql proxy
      env:
        PROXY: bazel run --run_under "valgrind --error-exitcode=1 --errors-for-leak-kinds=definite --leak-check=full --show-leak-kinds=definite" //mysql_proxy/src:mysql_proxy -- -logtostderr=1
      run: docker exec pelton-testing sh -c "cd /home/pelton/mysql && $PROXY"

    - name: Run cli samples
      env:
        CLEANUP: ./bin/drop.sh root password
        WEBSUBMIT: mariadb --port=10001 --host=127.0.0.1 < bin/examples/simple-websubmit.sql
        # WEBSUBMIT: bazel run bin:cli --config=valgrind -- --logtostderr=1 < bin/examples/simple-websubmit.sql
        MEDICAL: mariadb --port=10001 --host=127.0.0.1 < bin/examples/medical_chat.sql
        # MEDICAL: bazel run bin:cli --config=valgrind -- --logtostderr=1 < bin/examples/medical_chat.sql
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && $CLEANUP"
        docker exec pelton-testing sh -c "cd /home/pelton && $WEBSUBMIT"
        docker exec pelton-testing sh -c "cd /home/pelton && $CLEANUP"
        docker exec pelton-testing sh -c "cd /home/pelton && $MEDICAL"

    - name: Run social chat with restart/recovery
      env:
        CLEANUP: rm -rf /tmp/db && mkdir /tmp/db && ./bin/drop.sh root password
        # SOCIAL: bazel run bin:cli --config=valgrind -- --logtostderr=1 --db_path=/tmp/db < bin/examples/social_chat.sql
        SOCIAL: mariadb --port=10001 --host=127.0.0.1 < bin/examples/social_chat.sql
        # SOCIALCNTD: bazel run bin:cli --config=valgrind -- --logtostderr=1 --db_path=/tmp/db < bin/examples/social_chat.cntd.sql
        SOCIALCNTD: mariadb --port=10001 --host=127.0.0.1 < bin/examples/social_chat.cntd.sql
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && $CLEANUP"
        docker exec pelton-testing sh -c "cd /home/pelton && $SOCIAL"
