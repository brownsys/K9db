name: "Tests on Ubuntu"
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # Docker setup.
    - name: Build docker container
      run: |
        docker build --no-cache -t pelton/latest .

    - name: Run docker container
      run: |
        docker run --mount type=bind,source=$(pwd),target=/home/pelton --name pelton-testing -d -t pelton/latest
        sleep 60

    # bazel build ...
    - name: Build all
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && bazel build ..."
        docker exec pelton-testing sh -c "cd /home/pelton/experiments/lobsters && bazel build ..."
        docker exec pelton-testing sh -c "cd /home/pelton/experiments/ownCloud && bazel build ..."

    # bazel test all (with encryption; on by default)
    - name: Test all
      run: docker exec pelton-testing sh -c "cd /home/pelton && bazel test ... --test_output=all"

    # bazel test all without encryption
    - name: Test all no encryption
      run: docker exec pelton-testing sh -c "cd /home/pelton && bazel test ... --encryption=off --test_output=all"

    # prepared statement test.
    - name: Run prepared statement test
      run: docker exec pelton-testing sh -c "cd /home/pelton && ./.github/workflows/prepared-test.sh"

    # bin/examples/* via proxy
    - name: Run examples via proxy
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && ./.github/workflows/test.sh bin/examples/simple-websubmit.sql"
        docker exec pelton-testing sh -c "cd /home/pelton && ./.github/workflows/test.sh bin/examples/medical_chat.sql"

    - name: Run social chat with restart/recovery
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && ./.github/workflows/test.sh bin/examples/social_chat.sql bin/examples/social_chat.cntd.sql"

    # valgrind
    - name: Test dataflow with valgrind
      env:
        TEST_OPS: bazel test //pelton/dataflow/ops/... --config=valgrind --test_output=all
        TEST_GRAPH_PARTITION: bazel test //pelton/dataflow:graph_partition-test --config=valgrind --test_output=all
        TEST_KEY: bazel test //pelton/dataflow:key-test --config=valgrind --test_output=all
        TEST_RECORD: bazel test //pelton/dataflow:record-test --config=valgrind --test_output=all
        TEST_SCHEMA: bazel test //pelton/dataflow:schema-test --config=valgrind --test_output=all
        TEST_VALUE: bazel test //pelton/dataflow:value-test --config=valgrind --test_output=all
      run: |
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_OPS"
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_GRAPH_PARTITION"
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_KEY"
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_RECORD"
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_SCHEMA"
        docker exec pelton-testing sh -c "cd /home/pelton && $TEST_VALUE"
