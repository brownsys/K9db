load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "engine",
    srcs = [
        "engine.cc",
    ],
    hdrs = [
        "engine.h",
    ],
    visibility = ["//k9db:__subpackages__"],
    deps = [
        ":create",
        ":delete",
        ":explain",
        ":gdpr",
        ":insert",
        ":replace",
        ":select",
        ":update",
        ":view",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/sqlast:parser",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "util",
    srcs = [
        "util.cc",
    ],
    hdrs = [
        "util.h",
    ],
    visibility = ["//k9db:__subpackages__"],
    deps = [
        "//k9db:connection",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "create",
    srcs = [
        "create.cc",
    ],
    hdrs = [
        "create.h",
    ],
    deps = [
        ":index",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
        "@glog",
    ],
)

cc_library(
    name = "view",
    srcs = [
        "view.cc",
    ],
    hdrs = [
        "view.h",
    ],
    deps = [
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:future",
        "//k9db/dataflow:graph",
        "//k9db/dataflow:graph_partition",
        "//k9db/dataflow:key",
        "//k9db/dataflow:operator",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/dataflow/ops:forward_view",
        "//k9db/dataflow/ops:input",
        "//k9db/dataflow/ops:matview",
        "//k9db/planner",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
        "@glog",
    ],
)

cc_library(
    name = "index",
    srcs = [
        "index.cc",
    ],
    hdrs = [
        "index.h",
    ],
    deps = [
        ":view",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:graph",
        "//k9db/dataflow:key",
        "//k9db/dataflow:record",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sqlast:ast",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "insert",
    srcs = [
        "insert.cc",
    ],
    hdrs = [
        "insert.h",
    ],
    deps = [
        ":index",
        ":util",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "replace",
    srcs = [
        "replace.cc",
    ],
    hdrs = [
        "replace.h",
    ],
    deps = [
        ":insert",
        ":update",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
    ],
)

cc_library(
    name = "update",
    srcs = [
        "update.cc",
    ],
    hdrs = [
        "update.h",
    ],
    deps = [
        ":util",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "gdpr",
    srcs = [
        "gdpr.cc",
        "gdpr_forget.cc",
        "gdpr_get.cc",
    ],
    hdrs = [
        "gdpr.h",
    ],
    deps = [
        ":delete",
        ":select",
        ":update",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:iterator",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
        "@glog",
    ],
)

cc_library(
    name = "delete",
    srcs = [
        "delete.cc",
    ],
    hdrs = [
        "delete.h",
    ],
    deps = [
        ":util",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:iterator",
        "//k9db/util:shard_name",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "select",
    srcs = [
        "select.cc",
    ],
    hdrs = [
        "select.h",
    ],
    deps = [
        ":index",
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sql/rocksdb:filter",
        "//k9db/sql/rocksdb:project",
        "//k9db/sqlast:ast",
        "//k9db/sqlast:value_mapper",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
        "@glog",
    ],
)

cc_library(
    name = "explain",
    srcs = [
        "explain.cc",
    ],
    hdrs = [
        "explain.h",
    ],
    deps = [
        "//k9db:connection",
        "//k9db/dataflow:dstate",
        "//k9db/dataflow:record",
        "//k9db/dataflow:schema",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "//k9db/sql:connection",
        "//k9db/sql:result",
        "//k9db/sqlast:ast",
        "//k9db/util:status",
        "//k9db/util:upgradable_lock",
        "@com_google_absl//absl/status",
    ],
)

# Tests.
cc_library(
    name = "tests_helpers",
    srcs = [
        "tests_helpers.cc",
    ],
    hdrs = [
        "tests_helpers.h",
    ],
    deps = [
        ":engine",
        "//k9db:connection",
        "//k9db/dataflow:record",
        "//k9db/sql:result",
        "//k9db/util:status",
        "@com_github_gflags_gflags//:gflags",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
    ],
)

cc_test(
    name = "create-test",
    srcs = [
        "create_unittest.cc",
    ],
    deps = [
        ":create",
        ":tests_helpers",
        "//k9db/shards:state",
        "//k9db/shards:types",
        "@glog",
    ],
)

cc_test(
    name = "insert-test",
    srcs = [
        "insert_unittest.cc",
    ],
    deps = [
        ":insert",
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "delete-test",
    srcs = [
        "delete_unittest.cc",
    ],
    deps = [
        ":delete",
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "update-test",
    srcs = [
        "update_unittest.cc",
    ],
    deps = [
        ":engine",
        ":insert",
        ":tests_helpers",
        ":update",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "gdpr-get-test",
    srcs = [
        "gdpr_get_unittest.cc",
    ],
    deps = [
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "gdpr-get-anon-test",
    srcs = [
        "gdpr_get_anon_unittest.cc",
    ],
    deps = [
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "gdpr-forget-test",
    srcs = [
        "gdpr_forget_unittest.cc",
    ],
    deps = [
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)

cc_test(
    name = "gdpr-forget-anon-test",
    srcs = [
        "gdpr_forget_anon_unittest.cc",
    ],
    deps = [
        ":tests_helpers",
        "//k9db/util:shard_name",
        "@glog",
    ],
)
