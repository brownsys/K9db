load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "dataflow",
    srcs = [
        "edge.cc",
        "graph.cc",
        "operator.cc",
        "ops/equijoin.cc",
        "ops/filter.cc",
        "ops/identity.cc",
        "ops/input.cc",
        "ops/matview.cc",
        "ops/union.cc",
        "record.cc",
        "schema.cc",
    ],
    hdrs = [
        "edge.h",
        "graph.h",
        "grouped_data.h",
        "key.h",
        "operator.h",
        "ops/equijoin.h",
        "ops/filter.h",
        "ops/identity.h",
        "ops/input.h",
        "ops/matview.h",
        "ops/union.h",
        "record.h",
        "record_utils.h",
        "schema.h",
        "types.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//pelton/sqlast:ast",
        "@absl//absl/base:core_headers",
        "@absl//absl/container:flat_hash_map",
        "@absl//absl/container:node_hash_map",
        "@absl//absl/strings",
        "@glog",
        "@gtest//:gtest_prod",
    ],
)

cc_test(
    name = "dataflow-tests",
    srcs = [
        "graph_unittest.cc",
        "ops/equijoin_unittest.cc",
        "ops/filter_unittest.cc",
        "ops/union_unittest.cc",
        "record_unittest.cc",
    ],
    copts = ["-Iexternal/gtest/googletest/include"],
    deps = [
        "//pelton/dataflow",
        "@glog",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)
