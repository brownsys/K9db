load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

exports_files(
    [
        "benchmark_utils.h",
        "filter_enum.h",
        "aggregate_enum.h",
        "project_enum.h",
        "equijoin_enum.h",
    ],
    ["//pelton/dataflow:__subpackages__"],
)

cc_library(
    name = "equijoin",
    srcs = [
        "equijoin.cc",
    ],
    hdrs = [
        "equijoin.h",
        "equijoin_enum.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        ":grouped_data",
        "//pelton/dataflow:key",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "@com_google_googletest//:gtest_prod",
        "@glog",
    ],
)

cc_library(
    name = "exchange",
    srcs = [
        "exchange.cc",
    ],
    hdrs = [
        "exchange.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:channel",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:types",
    ],
)

cc_library(
    name = "filter",
    srcs = [
        "filter.cc",
    ],
    hdrs = [
        "filter.h",
        "filter_enum.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:types",
        "//pelton/dataflow:value",
        "//pelton/sqlast:ast",
        "@com_google_googletest//:gtest_prod",
        "@glog",
    ],
)

cc_library(
    name = "input",
    srcs = [
        "input.cc",
    ],
    hdrs = [
        "input.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:types",
        "@glog",
    ],
)

cc_library(
    name = "identity",
    srcs = [
        "identity.cc",
    ],
    hdrs = [
        "identity.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:types",
    ],
)

cc_library(
    name = "grouped_data",
    srcs = [],
    hdrs = [
        "grouped_data.h",
    ],
    deps = [
        "//pelton/dataflow:key",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/util:merge_sort",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
    ],
)

cc_library(
    name = "matview",
    srcs = [],
    hdrs = [
        "matview.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        ":grouped_data",
        "//pelton/dataflow:key",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "@com_google_googletest//:gtest_prod",
        "@glog",
    ],
)

cc_library(
    name = "union",
    srcs = [
        "union.cc",
    ],
    hdrs = [
        "union.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "@glog",
    ],
)

cc_library(
    name = "project",
    srcs = [
        "project.cc",
    ],
    hdrs = [
        "project.h",
        "project_enum.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "@com_google_googletest//:gtest_prod",
        "@glog",
    ],
)

cc_library(
    name = "aggregate",
    srcs = [
        "aggregate.cc",
    ],
    hdrs = [
        "aggregate.h",
        "aggregate_enum.h",
    ],
    visibility = ["//pelton:__subpackages__"],
    deps = [
        ":grouped_data",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_googletest//:gtest_prod",
        "@com_google_cc_differential_privacy//base:statusor",
        "@com_google_cc_differential_privacy//algorithms:algorithm",
        "@com_google_cc_differential_privacy//algorithms:bounded-sum",
        "@com_google_cc_differential_privacy//algorithms:count",
        "@glog",
    ],
)

cc_test(
    name = "equijoin-test",
    srcs = [
        "equijoin_unittest.cc",
    ],
    deps = [
        ":equijoin",
        ":identity",
        "//pelton/dataflow:graph_partition",
        "//pelton/dataflow:key",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@glog",
    ],
)

cc_test(
    name = "filter-test",
    srcs = [
        "filter_unittest.cc",
    ],
    deps = [
        ":filter",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@glog",
    ],
)

cc_test(
    name = "matview-test",
    srcs = [
        "matview_unittest.cc",
    ],
    deps = [
        ":matview",
        "//pelton/dataflow:key",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@glog",
    ],
)

cc_test(
    name = "project-test",
    srcs = [
        "project_unittest.cc",
    ],
    deps = [
        ":project",
        "//pelton/dataflow:key",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@glog",
    ],
)

cc_test(
    name = "aggregate-test",
    srcs = [
        "aggregate_unittest.cc",
    ],
    deps = [
        ":aggregate",
        "//pelton/dataflow:key",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@glog",
    ],
)

cc_test(
    name = "benchmarks",
    srcs = [
        "benchmark_main.cc",
        "benchmark_utils.h",
        "equijoin_benchmark.cc",
        "filter_benchmark.cc",
        "identity_benchmark.cc",
        "matview_benchmark.cc",
    ],
    tags = ["benchmark"],
    deps = [
        ":equijoin",
        ":filter",
        ":identity",
        ":input",
        ":matview",
        "//pelton/dataflow:graph_partition",
        "//pelton/dataflow:operator",
        "//pelton/dataflow:record",
        "//pelton/dataflow:schema",
        "//pelton/dataflow:types",
        "//pelton/sqlast:ast",
        "//pelton/util:ints",
        "@com_github_google_benchmark//:benchmark",
    ],
)
